define(["./GeometryOffsetAttribute-1772960d","./arrayRemoveDuplicates-18786327","./Transforms-2f9313e7","./Matrix2-ccd5b911","./RuntimeError-346a3079","./ComponentDatatype-93750d1a","./PolylineVolumeGeometryLibrary-6696728c","./CorridorGeometryLibrary-62d4ed8b","./when-4bbc8319","./GeometryAttribute-4cca8ebf","./GeometryAttributes-7827a6c2","./IndexDatatype-b7d979a6","./PolygonPipeline-13235481","./combine-83860057","./WebGLConstants-1c8239cc","./EllipsoidTangentPlane-53e9387a","./AxisAlignedBoundingBox-66b76991","./IntersectionTests-66bcab6d","./Plane-18bb00f8","./PolylinePipeline-18503392","./EllipsoidGeodesic-19ea7553","./EllipsoidRhumbLine-aa9e6266"],function(A,l,d,B,e,M,R,U,F,Y,q,W,v,t,i,r,o,a,n,s,u,p){"use strict";var J=new B.Cartesian3,j=new B.Cartesian3,z=new B.Cartesian3;function _(e,t){var i,r=[],o=e.positions,a=e.corners,e=e.endPositions,n=new q.GeometryAttributes,s=0,l=0,d=0;for(w=0;w<o.length;w+=2)s+=i=o[w].length-3,d+=i/3*4,l+=o[w+1].length-3;for(s+=3,l+=3,w=0;w<a.length;w++){var u=a[w],p=a[w].leftPositions;F.defined(p)?s+=i=p.length:l+=i=a[w].rightPositions.length,d+=i/3*2}var h,f,y,c,g,b=F.defined(e),m=(b&&(s+=h=e[0].length-3,l+=h,d+=4*(h/=3)),s+l),A=new Float64Array(m),v=0,_=m-1,E=h/2,C=W.IndexDatatype.createTypedArray(m/3,d+4),G=0;if(C[G++]=v/3,C[G++]=(_-2)/3,b){r.push(v/3);for(var T=J,P=j,I=e[0],w=0;w<E;w++)T=B.Cartesian3.fromArray(I,3*(E-1-w),T),P=B.Cartesian3.fromArray(I,3*(E+w),P),U.CorridorGeometryLibrary.addAttribute(A,P,v),U.CorridorGeometryLibrary.addAttribute(A,T,void 0,_),g=(y=v/3)+1,c=(f=(_-2)/3)-1,C[G++]=f,C[G++]=c,C[G++]=y,C[G++]=g,v+=3,_-=3}var L=0,D=o[L++],x=o[L++];for(A.set(D,v),A.set(x,_-x.length+1),i=x.length-3,r.push(v/3,(_-2)/3),w=0;w<i;w+=3)g=(y=v/3)+1,c=(f=(_-2)/3)-1,C[G++]=f,C[G++]=c,C[G++]=y,C[G++]=g,v+=3,_-=3;for(w=0;w<a.length;w++){var k,N,O=(u=a[w]).leftPositions,V=u.rightPositions,H=z;if(F.defined(O)){for(_-=3,N=c,r.push(g),k=0;k<O.length/3;k++)H=B.Cartesian3.fromArray(O,3*k,H),C[G++]=N-k-1,C[G++]=N-k,U.CorridorGeometryLibrary.addAttribute(A,H,void 0,_),_-=3;r.push(N-Math.floor(O.length/6)),t===R.CornerType.BEVELED&&r.push((_-2)/3+1),v+=3}else{for(v+=3,N=g,r.push(c),k=0;k<V.length/3;k++)H=B.Cartesian3.fromArray(V,3*k,H),C[G++]=N+k,C[G++]=N+k+1,U.CorridorGeometryLibrary.addAttribute(A,H,v),v+=3;r.push(N+Math.floor(V.length/6)),t===R.CornerType.BEVELED&&r.push(v/3-1),_-=3}for(D=o[L++],x=o[L++],D.splice(0,3),x.splice(x.length-3,3),A.set(D,v),A.set(x,_-x.length+1),i=x.length-3,k=0;k<x.length;k+=3)y=(g=v/3)-1,C[G++]=f=(c=(_-2)/3)+1,C[G++]=c,C[G++]=y,C[G++]=g,v+=3,_-=3;r.push((v-=3)/3,((_+=3)-2)/3)}if(b){v+=3,_-=3,T=J,P=j;var S=e[1];for(w=0;w<E;w++)T=B.Cartesian3.fromArray(S,3*(h-w-1),T),P=B.Cartesian3.fromArray(S,3*w,P),U.CorridorGeometryLibrary.addAttribute(A,T,void 0,_),U.CorridorGeometryLibrary.addAttribute(A,P,v),y=(g=v/3)-1,C[G++]=f=(c=(_-2)/3)+1,C[G++]=c,C[G++]=y,C[G++]=g,v+=3,_-=3;r.push(v/3)}else r.push(v/3,(_-2)/3);return C[G++]=v/3,C[G++]=(_-2)/3,n.position=new Y.GeometryAttribute({componentDatatype:M.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:A}),{attributes:n,indices:C,wallIndices:r}}function f(e){var t=(e=F.defaultValue(e,F.defaultValue.EMPTY_OBJECT)).positions,i=e.width,r=F.defaultValue(e.height,0),o=F.defaultValue(e.extrudedHeight,r);this._positions=t,this._ellipsoid=B.Ellipsoid.clone(F.defaultValue(e.ellipsoid,B.Ellipsoid.WGS84)),this._width=i,this._height=Math.max(r,o),this._extrudedHeight=Math.min(r,o),this._cornerType=F.defaultValue(e.cornerType,R.CornerType.ROUNDED),this._granularity=F.defaultValue(e.granularity,M.CesiumMath.RADIANS_PER_DEGREE),this._offsetAttribute=e.offsetAttribute,this._workerName="createCorridorOutlineGeometry",this.packedLength=1+t.length*B.Cartesian3.packedLength+B.Ellipsoid.packedLength+6}f.pack=function(e,t,i){i=F.defaultValue(i,0);var r=e._positions,o=r.length;t[i++]=o;for(var a=0;a<o;++a,i+=B.Cartesian3.packedLength)B.Cartesian3.pack(r[a],t,i);return B.Ellipsoid.pack(e._ellipsoid,t,i),i+=B.Ellipsoid.packedLength,t[i++]=e._width,t[i++]=e._height,t[i++]=e._extrudedHeight,t[i++]=e._cornerType,t[i++]=e._granularity,t[i]=F.defaultValue(e._offsetAttribute,-1),t};var y=B.Ellipsoid.clone(B.Ellipsoid.UNIT_SPHERE),c={positions:void 0,ellipsoid:y,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,offsetAttribute:void 0};return f.unpack=function(e,t,i){t=F.defaultValue(t,0);for(var r=e[t++],o=new Array(r),a=0;a<r;++a,t+=B.Cartesian3.packedLength)o[a]=B.Cartesian3.unpack(e,t);var n=B.Ellipsoid.unpack(e,t,y),s=(t+=B.Ellipsoid.packedLength,e[t++]),l=e[t++],d=e[t++],u=e[t++],p=e[t++],h=e[t];return F.defined(i)?(i._positions=o,i._ellipsoid=B.Ellipsoid.clone(n,i._ellipsoid),i._width=s,i._height=l,i._extrudedHeight=d,i._cornerType=u,i._granularity=p,i._offsetAttribute=-1===h?void 0:h,i):(c.positions=o,c.width=s,c.height=l,c.extrudedHeight=d,c.cornerType=u,c.granularity=p,c.offsetAttribute=-1===h?void 0:h,new f(c))},f.createGeometry=function(e){var t,i,r,o,a=e._positions,n=e._width,s=e._ellipsoid,a=function(e,t){for(var i=0;i<e.length;i++)e[i]=t.scaleToGeodeticSurface(e[i],e[i]);return e}(a,s),a=l.arrayRemoveDuplicates(a,B.Cartesian3.equalsEpsilon);if(!(a.length<2||n<=0))return o=e._height,i=e._extrudedHeight,t=!M.CesiumMath.equalsEpsilon(o,i,0,M.CesiumMath.EPSILON2),a={ellipsoid:s,positions:a,width:n,cornerType:e._cornerType,granularity:e._granularity,saveAttributes:!1},t?(a.height=o,a.extrudedHeight=i,a.offsetAttribute=e._offsetAttribute,r=function(e){for(var t,i,r=e.ellipsoid,o=(p=_(U.CorridorGeometryLibrary.computePositions(e),e.cornerType)).wallIndices,a=e.height,n=e.extrudedHeight,s=p.attributes,l=p.indices,d=(p=s.position.values).length,u=((h=new Float64Array(d)).set(p),new Float64Array(2*d)),p=v.PolygonPipeline.scaleToGeodeticHeight(p,a,r),h=v.PolygonPipeline.scaleToGeodeticHeight(h,n,r),f=(u.set(p),u.set(h,d),s.position.values=u,d/=3,F.defined(e.offsetAttribute)&&(a=new Uint8Array(2*d),a=e.offsetAttribute===A.GeometryOffsetAttribute.TOP?A.arrayFill(a,1,0,d):(n=e.offsetAttribute===A.GeometryOffsetAttribute.NONE?0:1,A.arrayFill(a,n)),s.applyOffset=new Y.GeometryAttribute({componentDatatype:M.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:a})),l.length),y=W.IndexDatatype.createTypedArray(u.length/3,2*(f+o.length)),c=(y.set(l),f),g=0;g<f;g+=2){var b=l[g],m=l[g+1];y[c++]=b+d,y[c++]=m+d}for(g=0;g<o.length;g++)i=(t=o[g])+d,y[c++]=t,y[c++]=i;return{attributes:s,indices:y}}(a)):((r=_(U.CorridorGeometryLibrary.computePositions(a),a.cornerType)).attributes.position.values=v.PolygonPipeline.scaleToGeodeticHeight(r.attributes.position.values,o,s),F.defined(e._offsetAttribute)&&(n=r.attributes.position.values.length,t=new Uint8Array(n/3),i=e._offsetAttribute===A.GeometryOffsetAttribute.NONE?0:1,A.arrayFill(t,i),r.attributes.applyOffset=new Y.GeometryAttribute({componentDatatype:M.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:t}))),a=r.attributes,o=d.BoundingSphere.fromVertices(a.position.values,void 0,3),new Y.Geometry({attributes:a,indices:r.indices,primitiveType:Y.PrimitiveType.LINES,boundingSphere:o,offsetAttribute:e._offsetAttribute})},function(e,t){return(e=F.defined(t)?f.unpack(e,t):e)._ellipsoid=B.Ellipsoid.clone(e._ellipsoid),f.createGeometry(e)}});
