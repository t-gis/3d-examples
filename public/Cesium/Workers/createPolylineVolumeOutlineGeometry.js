define(["./when-4bbc8319","./Matrix2-ccd5b911","./arrayRemoveDuplicates-18786327","./BoundingRectangle-2da8b04c","./Transforms-2f9313e7","./ComponentDatatype-93750d1a","./PolylineVolumeGeometryLibrary-6696728c","./RuntimeError-346a3079","./GeometryAttribute-4cca8ebf","./GeometryAttributes-7827a6c2","./IndexDatatype-b7d979a6","./PolygonPipeline-13235481","./combine-83860057","./WebGLConstants-1c8239cc","./EllipsoidTangentPlane-53e9387a","./AxisAlignedBoundingBox-66b76991","./IntersectionTests-66bcab6d","./Plane-18bb00f8","./PolylinePipeline-18503392","./EllipsoidGeodesic-19ea7553","./EllipsoidRhumbLine-aa9e6266"],function(d,y,g,h,m,f,E,e,P,_,b,v,i,n,t,a,o,r,l,s,p){"use strict";function c(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions,e=(this._positions=i,this._shape=n,this._ellipsoid=y.Ellipsoid.clone(d.defaultValue(e.ellipsoid,y.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,E.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,f.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry",1+i.length*y.Cartesian3.packedLength);e+=1+n.length*y.Cartesian2.packedLength,this.packedLength=e+y.Ellipsoid.packedLength+2}c.pack=function(e,i,n){n=d.defaultValue(n,0);var t,a=e._positions,o=a.length;for(i[n++]=o,t=0;t<o;++t,n+=y.Cartesian3.packedLength)y.Cartesian3.pack(a[t],i,n);var r=e._shape,o=r.length;for(i[n++]=o,t=0;t<o;++t,n+=y.Cartesian2.packedLength)y.Cartesian2.pack(r[t],i,n);return y.Ellipsoid.pack(e._ellipsoid,i,n),n+=y.Ellipsoid.packedLength,i[n++]=e._cornerType,i[n]=e._granularity,i};var u=y.Ellipsoid.clone(y.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:u,height:void 0,cornerType:void 0,granularity:void 0},C=(c.unpack=function(e,i,n){i=d.defaultValue(i,0);for(var t=e[i++],a=new Array(t),o=0;o<t;++o,i+=y.Cartesian3.packedLength)a[o]=y.Cartesian3.unpack(e,i);var t=e[i++],r=new Array(t);for(o=0;o<t;++o,i+=y.Cartesian2.packedLength)r[o]=y.Cartesian2.unpack(e,i);var l=y.Ellipsoid.unpack(e,i,u),s=(i+=y.Ellipsoid.packedLength,e[i++]),p=e[i];return d.defined(n)?(n._positions=a,n._shape=r,n._ellipsoid=y.Ellipsoid.clone(l,n._ellipsoid),n._cornerType=s,n._granularity=p,n):(k.polylinePositions=a,k.shapePositions=r,k.cornerType=s,k.granularity=p,new c(k))},new h.BoundingRectangle);return c.createGeometry=function(e){var i=e._positions,i=g.arrayRemoveDuplicates(i,y.Cartesian3.equalsEpsilon),n=e._shape,n=E.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(n);if(!(i.length<2||n.length<3)){v.PolygonPipeline.computeWindingOrder2D(n)===v.WindingOrder.CLOCKWISE&&n.reverse();var t=h.BoundingRectangle.fromPoints(n,C),i=E.PolylineVolumeGeometryLibrary.computePositions(i,n,t,e,!1),t=n,e=new _.GeometryAttributes,a=(e.position=new P.GeometryAttribute({componentDatatype:f.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:i}),t.length),t=e.position.values.length/3,o=i.length/3/a,r=b.IndexDatatype.createTypedArray(t,2*a*(1+o)),l=0,s=0,p=s*a;for(u=0;u<a-1;u++)r[l++]=u+p,r[l++]=u+p+1;for(r[l++]=a-1+p,r[l++]=p,p=(s=o-1)*a,u=0;u<a-1;u++)r[l++]=u+p,r[l++]=u+p+1;for(r[l++]=a-1+p,r[l++]=p,s=0;s<o-1;s++)for(var d=a*s,c=d+a,u=0;u<a;u++)r[l++]=u+d,r[l++]=u+c;return new P.Geometry({attributes:e,indices:b.IndexDatatype.createTypedArray(t,r),boundingSphere:m.BoundingSphere.fromVertices(i),primitiveType:P.PrimitiveType.LINES})}},function(e,i){return(e=d.defined(i)?c.unpack(e,i):e)._ellipsoid=y.Ellipsoid.clone(e._ellipsoid),c.createGeometry(e)}});
